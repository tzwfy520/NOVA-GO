version: '3.8'

services:
  # SSH采集器服务
  sshcollector:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sshcollector
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - DATABASE_SQLITE_PATH=/app/data/sshcollector.db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=info
      - LOG_OUTPUT=file
      - LOG_FILE_PATH=/app/logs/sshcollector.log
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./configs:/app/configs
    depends_on:
      - redis
      - xxl-job-admin
    networks:
      - sshcollector-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: sshcollector-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass sshcollector123
    volumes:
      - redis-data:/data
    networks:
      - sshcollector-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # XXL-Job调度中心
  xxl-job-admin:
    image: xuxueli/xxl-job-admin:2.4.0
    container_name: xxl-job-admin
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      PARAMS: '--spring.datasource.url=jdbc:mysql://mysql:3306/xxl_job?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai --spring.datasource.username=root --spring.datasource.password=123456'
    volumes:
      - xxl-job-logs:/data/applogs
    depends_on:
      - mysql
    networks:
      - sshcollector-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/xxl-job-admin"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MySQL数据库（用于XXL-Job）
  mysql:
    image: mysql:8.0
    container_name: xxl-job-mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: xxl_job
      MYSQL_USER: xxljob
      MYSQL_PASSWORD: xxljob123
    volumes:
      - mysql-data:/var/lib/mysql
      - ./scripts/xxl-job-mysql.sql:/docker-entrypoint-initdb.d/xxl-job-mysql.sql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - sshcollector-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p123456"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: sshcollector-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - nginx-logs:/var/log/nginx
    depends_on:
      - sshcollector
      - xxl-job-admin
    networks:
      - sshcollector-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus监控
  prometheus:
    image: prom/prometheus:latest
    container_name: sshcollector-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - sshcollector-network

  # Grafana可视化
  grafana:
    image: grafana/grafana:latest
    container_name: sshcollector-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - sshcollector-network

volumes:
  redis-data:
    driver: local
  mysql-data:
    driver: local
  xxl-job-logs:
    driver: local
  nginx-logs:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  sshcollector-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16